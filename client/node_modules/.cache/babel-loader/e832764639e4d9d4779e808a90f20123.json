{"ast":null,"code":"var _jsxFileName = \"/Users/brianeliasmontellano/CODE/memories_MERN_app/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Modal } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleOpen,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          noValidate: true,\n          className: `${classes.root} ${classes.form}`,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: currentId ? `Editing \"${post.title}\"` : 'Creating Nostalgia'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"creator\",\n            variant: \"outlined\",\n            label: \"Creator\",\n            fullWidth: true,\n            value: postData.creator,\n            onChange: e => setPostData({ ...postData,\n              creator: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"title\",\n            variant: \"outlined\",\n            label: \"Title\",\n            fullWidth: true,\n            value: postData.title,\n            onChange: e => setPostData({ ...postData,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"message\",\n            variant: \"outlined\",\n            label: \"Message\",\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            value: postData.message,\n            onChange: e => setPostData({ ...postData,\n              message: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"tags\",\n            variant: \"outlined\",\n            label: \"Tags (coma separated)\",\n            fullWidth: true,\n            value: postData.tags,\n            onChange: e => setPostData({ ...postData,\n              tags: e.target.value.split(',')\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.fileInput,\n            children: /*#__PURE__*/_jsxDEV(FileBase, {\n              type: \"file\",\n              multiple: false,\n              onDone: ({\n                base64\n              }) => setPostData({ ...postData,\n                selectedFile: base64\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.buttonSubmit,\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            type: \"submit\",\n            fullWidth: true,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"small\",\n            onClick: clear,\n            fullWidth: true,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Form, \"bTnMsojpOqThjhCYkEtPNMU9e+c=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/brianeliasmontellano/CODE/memories_MERN_app/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","Modal","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","open","setOpen","clear","handleSubmit","e","preventDefault","handleOpen","handleClose","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Modal } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n\n    return (\n      <div>\n        <button type=\"button\" onClick={handleOpen}>\n          Open Modal\n        </button>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating Nostalgia'}</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n        </Modal>\n      </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}