{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, LIKE, DELETE, DELETE_ALL } from '../constants/actionTypes';\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      //return action posts\n      return action.payload;\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    case DELETE_ALL:\n      return [];\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/Users/brianeliasmontellano/CODE/memories_MERN_app/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","LIKE","DELETE","DELETE_ALL","posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCC,MAAzC,EAAiDC,UAAjD,QAAkE,0BAAlE;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,SAAL;AACI;AACA,aAAOO,MAAM,CAACE,OAAd;;AACJ,SAAKR,MAAL;AACI,aAAO,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAKP,MAAL;AACA,SAAKC,IAAL;AACI,aAAOG,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAvE,CAAP;;AACJ,SAAKP,MAAL;AACI,aAAOE,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACJ,SAAKJ,UAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAOC,KAAP;AAdR;AAgBH,CAjBD","sourcesContent":["import {FETCH_ALL, CREATE, UPDATE, LIKE, DELETE, DELETE_ALL} from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n    switch (action.type) {\n        case FETCH_ALL:\n            //return action posts\n            return action.payload;\n        case CREATE:\n            return [...posts, action.payload];\n        case UPDATE:\n        case LIKE:\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n        case DELETE:\n            return posts.filter((post) => post._id !== action.payload)\n        case DELETE_ALL:\n            return [];\n        default:\n            return posts;\n    }   \n}"]},"metadata":{},"sourceType":"module"}