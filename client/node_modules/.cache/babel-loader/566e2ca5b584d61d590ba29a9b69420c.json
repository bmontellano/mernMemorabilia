{"ast":null,"code":"var _jsxFileName = \"/Users/brianeliasmontellano/CODE/memories_MERN_app/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Modal } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      if (postData.creator === '' || postData.title === '' || postData.message === '') {\n        alert('Creator, Title and Message fields are required');\n      } else {\n        dispatch(createPost(postData));\n        clear();\n      }\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n\n    handleClose();\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /*\n      <>\n        <Button className={classes.modalButton} variant='outlined' color=\"secondary\" size=\"large\" onClick={handleOpen}>\n          Create Nostalgia\n        </Button>\n        <Modal\n          style={modalStyle} \n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n        */\n    _jsxDEV(Paper, {\n      className: classes.paper,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.closeButton,\n        onClick: handleClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: currentId ? `Editing \"${post.title}\"` : 'Creating Nostalgia'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          name: \"creator\",\n          variant: \"outlined\",\n          label: \"Creator\",\n          fullWidth: true,\n          value: postData.creator,\n          onChange: e => setPostData({ ...postData,\n            creator: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          name: \"title\",\n          variant: \"outlined\",\n          label: \"Title\",\n          fullWidth: true,\n          value: postData.title,\n          onChange: e => setPostData({ ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          name: \"message\",\n          variant: \"outlined\",\n          label: \"Message\",\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          value: postData.message,\n          onChange: e => setPostData({ ...postData,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags (coma separated)\",\n          fullWidth: true,\n          value: postData.tags,\n          onChange: e => setPostData({ ...postData,\n            tags: e.target.value.split(',')\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.fileInput,\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"file\",\n            multiple: false,\n            onDone: ({\n              base64\n            }) => setPostData({ ...postData,\n              selectedFile: base64\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: clear,\n          fullWidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n    /* </Modal>\n    </> */\n\n  );\n};\n\n_s(Form, \"YCUvAhtBf+mn9d7zyCtJimUUOe8=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/brianeliasmontellano/CODE/memories_MERN_app/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","Modal","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","getModalStyle","top","left","transform","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","modalStyle","open","setOpen","clear","handleSubmit","e","preventDefault","alert","handleClose","handleOpen","paper","closeButton","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Modal } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nfunction getModalStyle() {\n  const top = 50 ;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      if (postData.creator  === '' || postData.title  === '' || postData.message  === '' ) {\n        alert('Creator, Title and Message fields are required');\n      } else {\n        dispatch(createPost(postData));\n        clear();\n      }\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n    handleClose();\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    /*\n      <>\n        <Button className={classes.modalButton} variant='outlined' color=\"secondary\" size=\"large\" onClick={handleOpen}>\n          Create Nostalgia\n        </Button>\n        <Modal\n          style={modalStyle} \n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n        */\n      <Paper className={classes.paper}> <Button className={classes.closeButton}  onClick={handleClose}>X</Button>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>  \n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating Nostalgia'}\n        </Typography>\n        <TextField required name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n        <TextField required name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField required name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n        /* </Modal>\n      </> */\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}